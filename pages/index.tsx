import * as React from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { Button, Form, Input, List, message } from "antd";
import { API, graphqlOperation } from "aws-amplify";
import { GraphQLResult } from "@aws-amplify/api";
import { listTodos } from "../src/graphql/queries";
import { createTodo } from "../src/graphql/mutations";
import Link from "next/link";
import { ListTodosQuery } from "../src/API";
import {useSession,signIn,signOut} from "next-auth/client"


interface ITodo {
  name: string;
  description: string;
}

interface IHomeProps {
  todoListItems?: ListTodosQuery;
}

interface IGetStaticProps {
  props: {
    todoListItems?: ListTodosQuery;
  };
}

const addTodo = async (todo: ITodo) => {
  try {
    await API.graphql(graphqlOperation(createTodo, { input: todo }));
  } catch (error: any) {
    message.error(error);
  }
};

const getListTodo = async () => {
  try {
    const { data } = (await API.graphql({
      query: listTodos,
      variables: { filter: { userId: { attributeExists: false } } },
    })) as GraphQLResult<ListTodosQuery>;
    return data;
  } catch (error: any) {
    message.error(error);
  }
};

export async function getStaticProps(): Promise<IGetStaticProps> {
  const { data } = (await API.graphql({
    query: listTodos,
    variables: { filter: { userId: { attributeExists: false } } },
  })) as GraphQLResult<ListTodosQuery>;
  return { props: { todoListItems: data } };
}

const Home = ({ todoListItems }: IHomeProps) => {
  const [todoList, setTodoList] = React.useState<ListTodosQuery | undefined>(
    todoListItems
  );

  const onFinish = (todo: ITodo) => {
    addTodo(todo).then(() => {
      getListTodo().then((todosLists) => {
        setTodoList(todosLists);
      });
    });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
          <Link href="/sign-in">
            <a>SignIn</a>
          </Link>
          <Link href="/sign-up">
            <a>SignUp</a>
          </Link>
          <Button onClick={()=>signIn('cognito').then((res)=>console.log(res)
                  )}>LogIn</Button>
        </div>
        <div>
          <Form onFinish={onFinish} name="todoForm">
            <Form.Item label="Name" name="name">
              <Input placeholder="Todo name" />
            </Form.Item>
            <Form.Item label="Description" name="description">
              <Input placeholder="Todo description" />
            </Form.Item>
            <Form.Item>
              <Button type="primary" htmlType="submit">
                Submit
              </Button>
            </Form.Item>
          </Form>
        </div>
        <div className={styles.listWrapper}>
          <List
            itemLayout="horizontal"
            dataSource={todoList?.listTodos?.items}
            renderItem={(item) => (
              <List.Item>
                <List.Item.Meta
                  title={item?.name}
                  description={item?.description}
                />
              </List.Item>
            )}
          />
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="#" target="_blank" rel="noopener noreferrer">
          Powered by
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
